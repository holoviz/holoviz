sudo: true
language: generic
os:
  - linux

env:
  global:
    - CHANS_DEV="-c conda-forge -c defaults -c pyviz/label/dev"   # this order matters because we're using strict channel priority
    - CHANS_REL="-c conda-forge -c defaults -c https://conda.anaconda.org/pyviz"  # this order matters because we're using strict channel priority
    - LABELS_DEV="--label dev"
    - LABELS_REL="--label dev --label main"
    - PYENV_VERSION=3.7
    - PYTHON_VERSION=3.6
    - PKG_TEST_PYTHON="--test-python=py36"
    - PIN="--pin-deps"
    - CHANS=$CHANS_DEV
    - OPTIONS="-o graph -o indirect"

stages:
  - test
  - name: package_dev
  - name: website_dev

jobs:
  include:
    - &default
      stage: test123
      env: DESC="Test examples" OPTIONS="-o graph -o indirect -o tests"
      os: linux
      install:
        - pip install pyctdev && doit miniconda_install && pip uninstall -y doit pyctdev
        - export PATH="$HOME/miniconda/bin:$PATH" && hash -r
        - conda config --set always_yes True
        - conda install -c pyviz/label/dev "pyctdev>=0.5" && doit ecosystem_setup
        - conda config --set path_conflict warn
        - conda config --set channel_priority strict  # this makes the conda solver **way** faster
      before_script:
        - doit env_create $CHANS --name=holoviz --python=$PYTHON_VERSION
        - source activate holoviz
        - doit develop_install $CHANS $OPTIONS
        - pip install msgpack nbsmoke # workaround for unfortunate combination of msgpack vs msgpack-python + no conda develop command + pkg_resources checking what's installed for entrypoints + msgpack/rise conflict via conda; need to investigate
        - doit env_capture
      script:
        - cp -r examples/data/.data_stubs/earthquakes.parq examples/data  # HACK until pyct is fixed
        - holoviz fetch-data --path=examples --use-test-data
        - doit test_all
        - holoviz clean-data --path=examples


    - &package_test
      <<: *default
      stage: test
      env: DESC="Test conda package on pyviz/label/dev"
      before_script:
        # TODO: pyctdev should just support this whole section
        - mkdir $HOME/tmp && cp tox.ini dodo.py $HOME/tmp && cd $HOME/tmp
        - doit test_user_install_part1
        - source activate holoviz-tutorial
      script: doit test_user_install_part2_conda

    - <<: *package_test
      env: DESC="Test package on pip"
      script:
# TODO: needs to be documented for pip users, e.g. "pip users will need to install snappy's dependencies via their system packaging tool"
        - sudo apt-get install libsnappy-dev python3-dev
        - doit test_user_install_part2_pip

    - <<: *package_test
      os: osx
      # travis/osx is not set up like travis/linux
      env: PYENV_VERSION=3.6.4
      before_install:
        - eval "$(pyenv init -)"
        - pyenv install $PYENV_VERSION

    - <<: *website
      stage: website_dev
      env: DESC="Deploy dev website to pyviz-dev.github.io/holoviz" OPTIONS="-o doc -o indirect -o graph" CHANS=$CHANS_REL
      script:
        - bokeh sampledata
        - holoviz fetch-data --path=examples
        - nbsite generate-rst --org holoviz --project-name holoviz --offset 1
        - nbsite build --what=html --output=builtdocs
      deploy:
        - provider: pages
          skip_cleanup: true
          github_token: $GITHUB_TOKEN
          local_dir: ./builtdocs
          fqdn: holoviz.org
          on:
            tags: true
            all_branches: true


    ## dev packages

    - &pip_pkg
      <<: *default
      env: DESC="Package for pip" PYPI=testpypi PYPIUSER=fail PYPIPASS=fail
      stage: package_dev
      before_script:
        - doit ecosystem=pip ecosystem_setup
        - doit ecosystem=pip package_build $PKG_TEST_PYTHON --test-group=unit --sdist-install-build-deps
      script: doit ecosystem=pip package_upload -u $PYPIUSER -p $PYPIPASS --pypi ${PYPI}

    - &conda_pkg
      <<: *default
      stage: package_dev
      env: DESC="Package for conda" LABELS=$LABELS_DEV CHANS=$CHANS_DEV
      before_script:
        - travis_wait 60 doit package_build $CHANS $PKG_TEST_PYTHON --package-name holoviz --test-group=unit
        # TODO: is package_test supposed to take --package-name? Seems to work with leftover conda.recipe from build.
        - doit package_test $CHANS $PKG_TEST_PYTHON --test-group=examples
      script: doit package_upload --token=fail $LABELS

notifications:
  email: false
