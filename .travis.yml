language: generic

env:
  global:
    - CHANS_DEV="-c pyviz/label/dev"
    - CHANS_REL="-c pyviz"
    - LABELS_DEV="--label dev"
    - LABELS_REL="--label dev --label main"
    - PYENV_VERSION=3.6
    - PKG_TEST_PYTHON="--test-python=py36"
    - PIN="--pin-deps"

stages:
  - name: test_user_install
    if: type = cron
  - test
  - name: conda_dev_package
    if: tag =~ ^v(\d+|\.)+[a-z]\d+$
# no pip packages until dependencies become available on pypi
# (see https://github.com/pyviz/pyviz/issues/100)
#  - name: pip_dev_package
#    if: tag =~ ^v(\d+|\.)+[a-z]\d+$
  - name: conda_package
    if: tag =~ ^v(\d+|\.)+[^a-z]\d+$
#  - name: pip_package
#    if: tag =~ ^v(\d+|\.)+[^a-z]\d+$
  - name: website_dev
    if: tag =~ ^v(\d+|\.)+[a-z]\d+$ OR tag = website_dev
  - name: website_release
    if: tag =~ ^v(\d+|\.)+[^a-z]\d+$ OR tag = website
  - name: unpinned_upcoming_trouble
    if: type = cron

# TODO: caching

jobs:
  include:
    - &default
      stage: test
      os: linux
      install:
        - pip install pyctdev && doit miniconda_install && pip uninstall -y doit pyctdev
        - export PATH="$HOME/miniconda/bin:$PATH" && hash -r
        - conda config --set always_yes True
        - conda install -c pyviz/label/dev pyctdev && doit ecosystem_setup
      before_script:
        - doit env_create --name=pyviz --python=$PYENV_VERSION
        - source activate pyviz
        - travis_wait 20 doit develop_install $CHANS_DEV --all-extras $PIN
        - pip install msgpack # workaround for unfortunate combination of msgpack vs msgpack-python + no conda develop command + pkg_resources checking what's installed for entrypoints + msgpack/rise conflict via conda; need to investigate
        - doit env_capture
      script:
        - pyviz fetch-data --path=examples --use-test-data
        - doit test_examples
        - pyviz clean-data --path=examples

    - <<: *default
      stage: unpinned_upcoming_trouble
      env: PIN=

    - &package_test
      <<: *default
      stage: test_user_install
      before_script: true
      script:
        # TODO: pyctdev should just support this whole section
        - mkdir $HOME/tmp && cp tox.ini dodo.py $HOME/tmp && cd $HOME/tmp
        - doit test_user_install_part1
        - source activate pyviz-tutorial
        - doit test_user_install_part2

    - <<: *package_test
      os: osx
      # travis/osx is not set up like travis/linux
      env: PYENV_VERSION=3.6.4
      before_install:
        - eval "$(pyenv init -)"
        - pyenv install $PYENV_VERSION

    - &website
      <<: *default
      stage: website_release
      script:
        # TODO: set chans according to dev/rel (has to be dev for now because website currently depends on dev)
        - doit develop_install $CHANS_DEV -o doc
        - bokeh sampledata
        - pyviz fetch-data --path=examples --use-test-data
        - nbsite generate-rst --org pyviz --project-name pyviz --offset 1 --skip '^.*Exercise.*$'
        - nbsite build --what=html --output=builtdocs
      deploy:
        - provider: pages
          skip_cleanup: true
          github_token: $GITHUB_TOKEN
          local_dir: ./builtdocs
          fqdn: pyviz.org
          on:
            tags: true
            all_branches: true

    - <<: *website
      stage: website_dev
      deploy:
        - provider: pages
          skip_cleanup: true
          github_token: $GITHUB_TOKEN
          local_dir: ./builtdocs
          repo: ioam-docs/pyviz-dev
          on:
            tags: true
            all_branches: true

    ## dev packages

#    - &pip_pkg
#      env: PYPI=testpypi PYPIUSER=$TPPU PYPIPASS=$TPPP
#      stage: pip_dev_package
#      install: pip install pyctdev && doit ecosystem=pip ecosystem_setup
#      before_script:
#        - doit ecosystem=pip package_build $PKG_TEST_PYTHON --test-group=unit --sdist-install-build-deps
#        #- doit ecosystem=pip package_build $PKG_TEST_PYTHON --test-group=examples --sdist-install-build-deps
#      script: doit ecosystem=pip package_upload -u $PYPIUSER -p $PYPIPASS --pypi ${PYPI}

    - &conda_pkg
      <<: *default
      stage: conda_dev_package
      env: LABELS=$LABELS_DEV CHANS=$CHANS_DEV
      before_script:
        - doit package_build $CHANS $PKG_TEST_PYTHON $PINS --package-name pyviz --test-group=unit
        # TODO: is package_test supposed to take --package-name? Seems to work with leftover conda.recipe from build.
        - doit package_test $CHANS $PKG_TEST_PYTHON --test-group=examples
      script: doit package_upload --token=$ANACONDA_TOKEN $LABELS

    ## release packages

#    - <<: *pip_pkg
#      env: PYPI=pypi PYPIUSER=$PPU PYPIPASS=$PPP
#      stage: pip_package

    - <<: *conda_pkg
      stage: conda_package
      env: LABELS=$LABELS_REL CHANS=$CHANS_REL

notifications:
  email: false
